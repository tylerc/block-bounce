This is the documentation for the Sprite Editor
This document is yet to be implemented

Abstract
	This program allows you to create and edit sprites for the Block Bounce game

Program Start
	The program is run via the command: ruby -rubygems sprite.rb [file]
	
	If a sprite file is specified, it is loaded. 
	If a file is not specified, the user is asked for the name of the new sprite, 
	and the size of the sprite.
	
	The editing window is then opened, displaying a large version of the sprite
	that is ready for editing (see Controls section for more details)

Controls
	There are 2 modes: View and Edit

	View Mode
	This mode allows you to view the sprite (duh!)
	The scale is kept between mode changes
	
	t - toggle between view mode and edit mode
	up arrow - scales the sprite larger
	down arrow - scales the sprite smaller
	left arrow - scales the sprite to the smallest possible size
	right arrow - scales the sprite to the biggest possible size
	
	---
	
	Edit Mode
	This mode allows you to edit the sprite
	The color values of the currently selected pixel
		are displayed in the window caption
	The sprite is saved on exit
	
	t - toggle between view mode and edit mode
	s - toggle the display of the grid
	h - toggle the display of the 'cursor'
	arrow keys - move the cursor
	r, g, b, a - changes the corresponding attribute for the pixels RGBA color
	q - cancels the color changes (after r,g,b,or a is pressed)
	c - copy the color of the currently selected pixel
	v - paste the color of the currently selected pixel
	l - toggles the line tool. The fill tool fills the pixels 
		with the color that was selected when it was toggled 
		on as you move around the grid.
	f - fill tool, fills the whole screen with a color

Future
	Make it faster
		In edit mode, the larger the sprite, the slower the program (50x50 is noticably slow)
		In view mode, things start slowing down the higher the scale factor. It may be faster to draw
			sprites the same way they are drawn in edit mode, instead of using set_at
	Mouse controls
	Undo
